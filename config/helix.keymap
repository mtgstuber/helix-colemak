/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3
 #define NAV 1

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
  combos {
    compatible = "zmk,combos";
    //left side
    combo_rs_bspc { 
      key-positions = <38 39>;
      bindings = <&kp BSPC>;
    };
    combo_st_space { 
      key-positions = <39 40>;
      bindings = <&kp SPACE>;
    };
    combo_ft_quote { 
      key-positions = <27 40>;
      bindings = <&kp SQT>;
    };
    combo_frd_lparen { 
      key-positions = <27 38 54>;
      bindings = <&kp LPAR>;
    };
    combo_ftx_rparen { 
      key-positions = <27 40 52>;
      bindings = <&kp RPAR>;
    };
    combo_xc_home { 
      key-positions = <52 53>;
      bindings = <&kp HOME>;
    };
    combo_cd_end { 
      key-positions = <53 54>;
      bindings = <&kp END>;
    };
    combo_xd_pgup { 
      key-positions = <52 54>;
      bindings = <&kp PG_UP>;
    };
    combo_xcd_pgdn { 
      key-positions = <52 53 54>;
      bindings = <&kp PG_UP>;
    };
    combo_wfp_enter { 
      key-positions = <26 27 28>;
      bindings = <&kp ENTER>;
    };
    combo_rst_down { 
      key-positions = <38 39 40>;
      bindings = <&kp DOWN>;
    };
    combo_wf_left { 
      key-positions = <26 27>;
      bindings = <&kp LEFT>;
    };
    combo_ws_at { 
      key-positions = <26 39>;
      bindings = <&kp AT>;
    };
    combo_fp_right { 
      key-positions = <27 28>;
      bindings = <&kp RIGHT>;
    };
    combo_rft_up { 
      key-positions = <38 27 40>;
      bindings = <&kp UP>;
    };
    combo_bg_v { 
      key-positions = <29 41>;
      bindings = <&kp V>;
    };
    combo_rf_pound { 
      key-positions = <38 27>;
      bindings = <&kp POUND>;
    };
    combo_sd_backslash { 
      key-positions = <39 54>;
      bindings = <&kp BACKSLASH>;
    };
    combo_xs_slash { 
      key-positions = <52 39>;
      bindings = <&kp SLASH>;
    };
    combo_rc_f2 { 
      key-positions = <38 53>;
      bindings = <&kp F2>;
    };
    combo_ct_f3 { 
      key-positions = <53 40>;
      bindings = <&kp F3>;
    };
    combo_sp_tick { 
      key-positions = <39 28>;
      bindings = <&kp GRAVE>;
    };
    //right
    combo_ne_space { 
      key-positions = <45 46>;
      bindings = <&kp SPACE>;
    };
    combo_ei_delete { 
      key-positions = <46 47>;
      bindings = <&kp DEL>;
    };
    combo_lu_minus { 
      key-positions = <31 32>;
      bindings = <&kp MINUS>;
    };
    combo_luy_enter { 
      key-positions = <31 32 33>;
      bindings = <&kp ENTER>;
    };
    combo_uy_equal { 
      key-positions = <32 33>;
      bindings = <&kp EQUAL>;
    };
    combo_ly_tab { 
      key-positions = <31 33>;
      bindings = <&kp TAB>;
    };
    combo_jm_k { 
      key-positions = <30 44>;
      bindings = <&kp K>;
    };
    combo_hedot_asterisk { 
      key-positions = <59 46 61>;
      bindings = <&kp STAR>;
    };
    combo_l8y_caret { 
      key-positions = <31 20 33>;
      bindings = <&kp CARET>;
    };
    combo_nudot_dollar { 
      key-positions = <45 32 61>;
      bindings = <&kp DOLLAR>;
    };
    combo_hui_ampersand { 
      key-positions = <59 32 47>;
      bindings = <&kp AMPERSAND>;
    };
    combo_ui_percentage { 
      key-positions = <32 47>;
      bindings = <&kp PERCENT>;
    };
    combo_hcomma_lbracket { 
      key-positions = <59 60>;
      bindings = <&kp LBRC>;
    };
    combo_commadot_rbracket { 
      key-positions = <60 61 >;
      bindings = <&kp RBRC>;
    };
    combo_ln_bang { 
      key-positions = <31 45>;
      bindings = <&kp EXCLAMATION>;
    };
    combo_ue_pipe { 
      key-positions = <32 46>;
      bindings = <&kp PIPE>;
    };
    combo_ncomma_f4 { 
      key-positions = <45 60>;
      bindings = <&kp F4>;
    };
    combo_commai_f5 { 
      key-positions = <60 47>;
      bindings = <&kp F5>;
    };

/*
    //combo template
    combo_ { 
      key-positions = < >;
      bindings = <&kp >;
    };
*/

  };
  behaviors {

    td0: tap_dance_0 {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mo 1>, <&tog 1>;
    };

    td1: tap_dance_1 {
      compatible = "zmk,behavior-tap-dance";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&mo 2>, <&tog 2>;
    };

    hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 44 45 46 47 48 49 57 58 59 60 61 62 63 >; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
     };
     hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 >; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
     };
  };

       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | BT_SEL |  F1    |  F2    |  F3    |  F4    |  F5    |                                      |  F6    |  F7    |  F8    |  F9    |  F10   | BT_SEL |
 // | ESC    |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  BSPC   |
 // |  TAB   |   Q    |   W    |   F    |   P    |   B    |                                      |   J    |   L    |   U    |   Y    |   ;    |  DEL    |
 // |  LT 1  |   A    |   R    |   S    |   T    |   G    |  LBKT   |                   | RBKT   |   M    |   N    |   E    |   I    |   O    |  LT 1   |
 // |  LT 2  |   Z    |   X    |   C    |   D    |   V    |  SPACE  |                   | SPACE  |   K    |   H    |   ,    |   .    |   /    |  LR 2   |
                     bindings = <
       &bt BT_SEL 1 &kp F1         &kp F2  &kp F3  &kp F4  &kp F5                             &kp F6       &kp F7  &kp F8    &kp F9     &kp F10           &bt BT_SEL 0
       &kp ESC      &kp N1         &kp N2  &kp N3  &kp N4  &kp N5                             &kp N6       &kp N7  &kp N8    &kp N9     &kp N0            &kp BSPC
       &kp TAB      &hml LWIN Q    &kp W   &kp F   &kp P   &kp B                              &kp J        &kp L   &kp U     &kp Y      &hmr RWIN SEMI    &kp DEL
       &td0         &hml LSHIFT A  &kp R   &kp S   &kp T   &kp G        &kp LBKT   &kp RBKT   &kp M        &kp N   &kp E     &kp I      &hmr RSHIFT O     &td0
       &td1         &hml LCTRL  Z  &kp X   &kp C   &kp D   &hml LALT V  &kp SPACE  &kp SPACE  &hmr RALT K  &kp H   &kp COMMA &kp PERIOD &hmr RCTRL SLASH  &td1
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
 // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
 // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &trans    &trans    &trans   &trans   &trans
       &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE
       &trans    &trans   &trans &trans   &trans   &trans    &kp LPAR        &kp RPAR &trans    &trans    &trans    &kp HOME &kp END  &trans
       &trans    &trans   &trans &trans   &trans   &trans    &trans          &trans   &trans    &trans    &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
 // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
 // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
 // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
 // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &trans    &trans &trans &trans &trans  &trans                       &trans  &trans    &trans     &trans       &trans       &trans
       &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp DEL
       &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
       &trans    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans        &trans &kp F12 &trans    &kp PSCRN  &kp PG_DN    &kp PG_UP    &trans
       &trans    &trans &trans &trans &trans  &trans  &trans        &trans &trans  &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
 // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
 // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
 // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
 // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |
                     bindings = <
       &kp GRAVE  &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT                             &kp CARET       &kp AMPS        &kp ASTRK       &kp LPAR        &kp RPAR        &ext_power EP_TOG
       &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                          &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_SPI &rgb_ug RGB_BRI &rgb_ug RGB_TOG
       &bt BT_NXT &out OUT_TOG &out OUT_USB &out OUT_BLE &trans       &trans                                &rgb_ug RGB_EFR &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_SPD &rgb_ug RGB_BRD &trans
       &bt BT_PRV &trans       &trans       &trans       &trans       &trans       &kp LBRC        &kp RBRC &trans          &trans          &trans          &trans          &trans          &trans
       &trans     &trans       &trans       &trans       &trans       &trans       &trans          &trans   &trans          &trans          &trans          &trans          &trans          &trans
                     >;
              };
       };
};
